name: Build, Push, and Deploy ECS Service

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      AWS_REGION: 'us-east-1'
      ECR_REPOSITORY: '475175191762.dkr.ecr.us-east-1.amazonaws.com/fiapx-apiprocessamento'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Authenticate to ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY

      - name: Build and Push Docker Image to ECR
        run: |
          docker build -t fiapx-apiprocessamento:latest -f ./Dockerfile .
          docker tag fiapx-apiprocessamento:latest $ECR_REPOSITORY:latest
          docker push $ECR_REPOSITORY:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    env:
      TF_WORKING_DIR: './infra'
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      AWS_REGION: 'us-east-1'

    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format Fix
        run: terraform fmt -write=true

      - name: Terraform Fmt
        run: terraform fmt -check -no-color

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Plan
        run: terraform plan -out terraform.plan

      - name: Terraform Apply
        run: terraform apply -auto-approve